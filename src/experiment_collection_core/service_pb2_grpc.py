# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from experiment_collection_core import service_pb2 as experiment__collection__core_dot_service__pb2


class ExperimentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateExperiment = channel.unary_unary(
                '/ExperimentService/CreateExperiment',
                request_serializer=experiment__collection__core_dot_service__pb2.AddExperiment.SerializeToString,
                response_deserializer=experiment__collection__core_dot_service__pb2.SimpleReply.FromString,
                )
        self.ReserveExperiment = channel.unary_unary(
                '/ExperimentService/ReserveExperiment',
                request_serializer=experiment__collection__core_dot_service__pb2.ReserveExperimentRequest.SerializeToString,
                response_deserializer=experiment__collection__core_dot_service__pb2.SimpleReply.FromString,
                )
        self.DeleteExperiment = channel.unary_unary(
                '/ExperimentService/DeleteExperiment',
                request_serializer=experiment__collection__core_dot_service__pb2.SimpleExperiment.SerializeToString,
                response_deserializer=experiment__collection__core_dot_service__pb2.SimpleReply.FromString,
                )
        self.CheckExperiment = channel.unary_unary(
                '/ExperimentService/CheckExperiment',
                request_serializer=experiment__collection__core_dot_service__pb2.SimpleExperiment.SerializeToString,
                response_deserializer=experiment__collection__core_dot_service__pb2.SimpleReply.FromString,
                )
        self.GetExperiments = channel.unary_unary(
                '/ExperimentService/GetExperiments',
                request_serializer=experiment__collection__core_dot_service__pb2.SimpleNamespace.SerializeToString,
                response_deserializer=experiment__collection__core_dot_service__pb2.ExperimentsReply.FromString,
                )
        self.CreateNamespace = channel.unary_unary(
                '/ExperimentService/CreateNamespace',
                request_serializer=experiment__collection__core_dot_service__pb2.SimpleNamespace.SerializeToString,
                response_deserializer=experiment__collection__core_dot_service__pb2.SimpleReply.FromString,
                )
        self.RevokeToken = channel.unary_unary(
                '/ExperimentService/RevokeToken',
                request_serializer=experiment__collection__core_dot_service__pb2.SimpleToken.SerializeToString,
                response_deserializer=experiment__collection__core_dot_service__pb2.SimpleReply.FromString,
                )
        self.GrantAccess = channel.unary_unary(
                '/ExperimentService/GrantAccess',
                request_serializer=experiment__collection__core_dot_service__pb2.GrantAccessRequest.SerializeToString,
                response_deserializer=experiment__collection__core_dot_service__pb2.SimpleReply.FromString,
                )


class ExperimentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReserveExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExperiments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNamespace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GrantAccess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExperimentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateExperiment,
                    request_deserializer=experiment__collection__core_dot_service__pb2.AddExperiment.FromString,
                    response_serializer=experiment__collection__core_dot_service__pb2.SimpleReply.SerializeToString,
            ),
            'ReserveExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.ReserveExperiment,
                    request_deserializer=experiment__collection__core_dot_service__pb2.ReserveExperimentRequest.FromString,
                    response_serializer=experiment__collection__core_dot_service__pb2.SimpleReply.SerializeToString,
            ),
            'DeleteExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteExperiment,
                    request_deserializer=experiment__collection__core_dot_service__pb2.SimpleExperiment.FromString,
                    response_serializer=experiment__collection__core_dot_service__pb2.SimpleReply.SerializeToString,
            ),
            'CheckExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckExperiment,
                    request_deserializer=experiment__collection__core_dot_service__pb2.SimpleExperiment.FromString,
                    response_serializer=experiment__collection__core_dot_service__pb2.SimpleReply.SerializeToString,
            ),
            'GetExperiments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExperiments,
                    request_deserializer=experiment__collection__core_dot_service__pb2.SimpleNamespace.FromString,
                    response_serializer=experiment__collection__core_dot_service__pb2.ExperimentsReply.SerializeToString,
            ),
            'CreateNamespace': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNamespace,
                    request_deserializer=experiment__collection__core_dot_service__pb2.SimpleNamespace.FromString,
                    response_serializer=experiment__collection__core_dot_service__pb2.SimpleReply.SerializeToString,
            ),
            'RevokeToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeToken,
                    request_deserializer=experiment__collection__core_dot_service__pb2.SimpleToken.FromString,
                    response_serializer=experiment__collection__core_dot_service__pb2.SimpleReply.SerializeToString,
            ),
            'GrantAccess': grpc.unary_unary_rpc_method_handler(
                    servicer.GrantAccess,
                    request_deserializer=experiment__collection__core_dot_service__pb2.GrantAccessRequest.FromString,
                    response_serializer=experiment__collection__core_dot_service__pb2.SimpleReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ExperimentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExperimentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ExperimentService/CreateExperiment',
            experiment__collection__core_dot_service__pb2.AddExperiment.SerializeToString,
            experiment__collection__core_dot_service__pb2.SimpleReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReserveExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ExperimentService/ReserveExperiment',
            experiment__collection__core_dot_service__pb2.ReserveExperimentRequest.SerializeToString,
            experiment__collection__core_dot_service__pb2.SimpleReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ExperimentService/DeleteExperiment',
            experiment__collection__core_dot_service__pb2.SimpleExperiment.SerializeToString,
            experiment__collection__core_dot_service__pb2.SimpleReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ExperimentService/CheckExperiment',
            experiment__collection__core_dot_service__pb2.SimpleExperiment.SerializeToString,
            experiment__collection__core_dot_service__pb2.SimpleReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExperiments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ExperimentService/GetExperiments',
            experiment__collection__core_dot_service__pb2.SimpleNamespace.SerializeToString,
            experiment__collection__core_dot_service__pb2.ExperimentsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNamespace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ExperimentService/CreateNamespace',
            experiment__collection__core_dot_service__pb2.SimpleNamespace.SerializeToString,
            experiment__collection__core_dot_service__pb2.SimpleReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RevokeToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ExperimentService/RevokeToken',
            experiment__collection__core_dot_service__pb2.SimpleToken.SerializeToString,
            experiment__collection__core_dot_service__pb2.SimpleReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GrantAccess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ExperimentService/GrantAccess',
            experiment__collection__core_dot_service__pb2.GrantAccessRequest.SerializeToString,
            experiment__collection__core_dot_service__pb2.SimpleReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
